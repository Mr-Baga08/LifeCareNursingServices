{"ast":null,"code":"var _jsxFileName = \"/home/mrunal/Documents/life_care_nursing_services/lifecare-website/client/src/context/ToastContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// client/src/context/ToastContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext();\n\n// Toast provider component\nexport const ToastProvider = ({\n  children\n}) => {\n  _s();\n  const [toast, setToast] = useState({\n    open: false,\n    title: '',\n    message: '',\n    type: 'info',\n    // 'success', 'error', 'warning', 'info'\n    duration: 6000,\n    icon: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n      fontSize: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)\n  });\n\n  // Show toast message\n  const showToast = ({\n    title,\n    message,\n    type = 'info',\n    duration = 6000\n  }) => {\n    // Set icon based on type\n    let icon;\n    switch (type) {\n      case 'success':\n        icon = /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n        break;\n      case 'error':\n        icon = /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n        break;\n      case 'warning':\n        icon = /*#__PURE__*/_jsxDEV(WarningAmberIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this);\n        break;\n      case 'info':\n      default:\n        icon = /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this);\n        break;\n    }\n    setToast({\n      open: true,\n      title,\n      message,\n      type,\n      duration,\n      icon\n    });\n  };\n\n  // Close toast message\n  const closeToast = () => {\n    setToast(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      toast,\n      showToast,\n      closeToast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the toast context\n_s(ToastProvider, \"5D00Gj9AIPICK3ta53sHjef2TIA=\");\n_c = ToastProvider;\nexport const useToast = () => {\n  _s2();\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n_s2(useToast, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","CheckCircleOutlineIcon","ErrorOutlineIcon","InfoOutlinedIcon","WarningAmberIcon","jsxDEV","_jsxDEV","ToastContext","ToastProvider","children","_s","toast","setToast","open","title","message","type","duration","icon","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","showToast","closeToast","prev","Provider","value","_c","useToast","_s2","context","Error","$RefreshReg$"],"sources":["/home/mrunal/Documents/life_care_nursing_services/lifecare-website/client/src/context/ToastContext.js"],"sourcesContent":["// client/src/context/ToastContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\n\n// Create context\nconst ToastContext = createContext();\n\n// Toast provider component\nexport const ToastProvider = ({ children }) => {\n  const [toast, setToast] = useState({\n    open: false,\n    title: '',\n    message: '',\n    type: 'info', // 'success', 'error', 'warning', 'info'\n    duration: 6000,\n    icon: <InfoOutlinedIcon fontSize=\"medium\" />\n  });\n\n  // Show toast message\n  const showToast = ({ title, message, type = 'info', duration = 6000 }) => {\n    // Set icon based on type\n    let icon;\n    switch (type) {\n      case 'success':\n        icon = <CheckCircleOutlineIcon fontSize=\"medium\" />;\n        break;\n      case 'error':\n        icon = <ErrorOutlineIcon fontSize=\"medium\" />;\n        break;\n      case 'warning':\n        icon = <WarningAmberIcon fontSize=\"medium\" />;\n        break;\n      case 'info':\n      default:\n        icon = <InfoOutlinedIcon fontSize=\"medium\" />;\n        break;\n    }\n\n    setToast({\n      open: true,\n      title,\n      message,\n      type,\n      duration,\n      icon\n    });\n  };\n\n  // Close toast message\n  const closeToast = () => {\n    setToast((prev) => ({\n      ...prev,\n      open: false\n    }));\n  };\n\n  return (\n    <ToastContext.Provider value={{ toast, showToast, closeToast }}>\n      {children}\n    </ToastContext.Provider>\n  );\n};\n\n// Custom hook to use the toast context\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,gBAAgB,MAAM,kCAAkC;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGT,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMU,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IACjCa,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,MAAM;IAAE;IACdC,QAAQ,EAAE,IAAI;IACdC,IAAI,eAAEZ,OAAA,CAACH,gBAAgB;MAACgB,QAAQ,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC7C,CAAC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAGA,CAAC;IAAEV,KAAK;IAAEC,OAAO;IAAEC,IAAI,GAAG,MAAM;IAAEC,QAAQ,GAAG;EAAK,CAAC,KAAK;IACxE;IACA,IAAIC,IAAI;IACR,QAAQF,IAAI;MACV,KAAK,SAAS;QACZE,IAAI,gBAAGZ,OAAA,CAACL,sBAAsB;UAACkB,QAAQ,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACnD;MACF,KAAK,OAAO;QACVL,IAAI,gBAAGZ,OAAA,CAACJ,gBAAgB;UAACiB,QAAQ,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC7C;MACF,KAAK,SAAS;QACZL,IAAI,gBAAGZ,OAAA,CAACF,gBAAgB;UAACe,QAAQ,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC7C;MACF,KAAK,MAAM;MACX;QACEL,IAAI,gBAAGZ,OAAA,CAACH,gBAAgB;UAACgB,QAAQ,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC7C;IACJ;IAEAX,QAAQ,CAAC;MACPC,IAAI,EAAE,IAAI;MACVC,KAAK;MACLC,OAAO;MACPC,IAAI;MACJC,QAAQ;MACRC;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBb,QAAQ,CAAEc,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPb,IAAI,EAAE;IACR,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEP,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAEa,SAAS;MAAEC;IAAW,CAAE;IAAAhB,QAAA,EAC5DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAb,EAAA,CAvDaF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAwD1B,OAAO,MAAMsB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGjC,UAAU,CAACQ,YAAY,CAAC;EACxC,IAAI,CAACyB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}