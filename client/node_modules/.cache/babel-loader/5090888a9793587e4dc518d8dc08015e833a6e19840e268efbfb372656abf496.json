{"ast":null,"code":"// client/src/api/index.js\nimport axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 seconds timeout\n});\n\n// Request interceptor - runs before each request\napi.interceptors.request.use(config => {\n  // Get token from localStorage if it exists\n  const token = localStorage.getItem('token');\n\n  // If token exists, add to headers\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // Handle request error\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor - runs after each response\napi.interceptors.response.use(response => {\n  // Return successful response data\n  return response;\n}, error => {\n  // Handle response error\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n\n    const {\n      status\n    } = error.response;\n\n    // Handle authentication errors\n    if (status === 401) {\n      // Unauthorized - token expired or invalid\n      localStorage.removeItem('token');\n\n      // Redirect to login page if not already there\n      if (window.location.pathname !== '/login') {\n        window.location.href = '/login';\n      }\n    }\n\n    // Handle forbidden errors\n    if (status === 403) {\n      console.error('Permission denied');\n      // Handle forbidden error (e.g., show a message)\n    }\n\n    // Handle not found errors\n    if (status === 404) {\n      console.error('Resource not found');\n      // Handle not found error\n    }\n\n    // Handle server errors\n    if (status >= 500) {\n      console.error('Server error');\n      // Handle server error\n    }\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Network error - no response received');\n    // Show network error message\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Request setup error:', error.message);\n  }\n\n  // Return the error for further handling\n  return Promise.reject(error);\n});\n\n// Helper function to handle API errors in components\nexport const handleApiError = error => {\n  let errorMessage = 'An unexpected error occurred. Please try again.';\n  if (error.response && error.response.data) {\n    // Use server provided error message if available\n    errorMessage = error.response.data.message || errorMessage;\n  } else if (error.message) {\n    // Use axios error message if server didn't provide one\n    errorMessage = error.message;\n  }\n  return errorMessage;\n};\n\n// Export the configured axios instance\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","status","removeItem","window","location","pathname","href","message","handleApiError","errorMessage","data"],"sources":["/home/mrunal/Documents/life_care_nursing_services/lifecare-website/client/src/api/index.js"],"sourcesContent":["// client/src/api/index.js\nimport axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000, // 10 seconds timeout\n});\n\n// Request interceptor - runs before each request\napi.interceptors.request.use(\n  (config) => {\n    // Get token from localStorage if it exists\n    const token = localStorage.getItem('token');\n    \n    // If token exists, add to headers\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  (error) => {\n    // Handle request error\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor - runs after each response\napi.interceptors.response.use(\n  (response) => {\n    // Return successful response data\n    return response;\n  },\n  (error) => {\n    // Handle response error\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      \n      const { status } = error.response;\n      \n      // Handle authentication errors\n      if (status === 401) {\n        // Unauthorized - token expired or invalid\n        localStorage.removeItem('token');\n        \n        // Redirect to login page if not already there\n        if (window.location.pathname !== '/login') {\n          window.location.href = '/login';\n        }\n      }\n      \n      // Handle forbidden errors\n      if (status === 403) {\n        console.error('Permission denied');\n        // Handle forbidden error (e.g., show a message)\n      }\n      \n      // Handle not found errors\n      if (status === 404) {\n        console.error('Resource not found');\n        // Handle not found error\n      }\n      \n      // Handle server errors\n      if (status >= 500) {\n        console.error('Server error');\n        // Handle server error\n      }\n      \n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('Network error - no response received');\n      // Show network error message\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Request setup error:', error.message);\n    }\n    \n    // Return the error for further handling\n    return Promise.reject(error);\n  }\n);\n\n// Helper function to handle API errors in components\nexport const handleApiError = (error) => {\n  let errorMessage = 'An unexpected error occurred. Please try again.';\n  \n  if (error.response && error.response.data) {\n    // Use server provided error message if available\n    errorMessage = error.response.data.message || errorMessage;\n  } else if (error.message) {\n    // Use axios error message if server didn't provide one\n    errorMessage = error.message;\n  }\n  \n  return errorMessage;\n};\n\n// Export the configured axios instance\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,MAAM;EAChDC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EAEA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT;EACAC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,GAAG,CAACQ,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAJ,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB;IACA;;IAEA,MAAM;MAAEC;IAAO,CAAC,GAAGL,KAAK,CAACI,QAAQ;;IAEjC;IACA,IAAIC,MAAM,KAAK,GAAG,EAAE;MAClB;MACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;;MAEhC;MACA,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,EAAE;QACzCF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAG,QAAQ;MACjC;IACF;;IAEA;IACA,IAAIL,MAAM,KAAK,GAAG,EAAE;MAClBJ,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF;;IAEA;IACA,IAAIK,MAAM,KAAK,GAAG,EAAE;MAClBJ,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF;;IAEA;IACA,IAAIK,MAAM,IAAI,GAAG,EAAE;MACjBJ,OAAO,CAACD,KAAK,CAAC,cAAc,CAAC;MAC7B;IACF;EAEF,CAAC,MAAM,IAAIA,KAAK,CAACP,OAAO,EAAE;IACxB;IACAQ,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;IACrD;EACF,CAAC,MAAM;IACL;IACAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACW,OAAO,CAAC;EACtD;;EAEA;EACA,OAAOT,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMY,cAAc,GAAIZ,KAAK,IAAK;EACvC,IAAIa,YAAY,GAAG,iDAAiD;EAEpE,IAAIb,KAAK,CAACI,QAAQ,IAAIJ,KAAK,CAACI,QAAQ,CAACU,IAAI,EAAE;IACzC;IACAD,YAAY,GAAGb,KAAK,CAACI,QAAQ,CAACU,IAAI,CAACH,OAAO,IAAIE,YAAY;EAC5D,CAAC,MAAM,IAAIb,KAAK,CAACW,OAAO,EAAE;IACxB;IACAE,YAAY,GAAGb,KAAK,CAACW,OAAO;EAC9B;EAEA,OAAOE,YAAY;AACrB,CAAC;;AAED;AACA,eAAe7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}